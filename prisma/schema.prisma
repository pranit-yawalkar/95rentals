// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId                String      @id @default(uuid())
  phone                 String      @unique
  name                  String
  email                 String      @unique
  gender                String
  address               String?
  licenseDocument       String?
  idProof               String?
  role                  String      @default("user")
  createdAt             DateTime    @default(now())
  rentals               Rental[]  // Relation to Rentals
  password              String?
  isActive              Boolean     @default(true)
}

model Bike {
  bikeId      String    @id @default(uuid())
  name        String
  type        String    // Example: "Scooter", "Motorcycle", "Electric Bike"
  model       String?
  specs       String?
  description String?
  imageUrl    String?
  hourlyRate  Float
  dailyRate   Float
  location    String
  features    String[]
  isAvailable Boolean   @default(true)
  createdAt   DateTime  @default(now())
  rentals     Rental[]
}


model Rental {
  rentalId    String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [userId])
  userId      String
  bike        Bike     @relation(fields: [bikeId], references: [bikeId])
  bikeId      String
  startTime   DateTime
  endTime     DateTime
  totalAmount Float
  status      String   @default("Pending") // "Pending", "Confirmed", "Completed", "Cancelled"
  payment     Payment?

  createdAt   DateTime @default(now())
}

model Payment {
  paymentId    String  @id @default(uuid())
  rental       Rental  @relation(fields: [rentalId], references: [rentalId])
  rentalId     String  @unique
  amount       Float
  status       String  @default("Pending") // "Pending", "Completed", "Failed"
  transactionId String?
  createdAt    DateTime @default(now())
}
